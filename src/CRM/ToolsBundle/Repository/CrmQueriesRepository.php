<?php

namespace CRM\ToolsBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CrmQueriesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CrmQueriesRepository extends EntityRepository
{

    public function getGroupsNameUcr(){
        $sqlGrpName = "SELECT DISTINCT groupName from crm_queries WHERE pageName = 'ucr_error_analysis'";
        $em = $this->getEntityManager();
        $query = $em->getConnection()->prepare($sqlGrpName);
        $query->execute();
        $groupsName = $query->fetchAll();
        return $groupsName;
    }

    public function getGroupsNamePick(){
        $sqlGrpName = "SELECT DISTINCT groupName from crm_queries WHERE pageName = 'pick_error_analysis'";
        $em = $this->getEntityManager();
        $query = $em->getConnection()->prepare($sqlGrpName);
        $query->execute();
        $groupsName = $query->fetchAll();
        return $groupsName;
    }

    public function getQueryFromCrmWheather($nbr){

        $queriesCrmWeather= array();
        $sql= "SELECT queryName, queryText FROM crm_queries where pageName='crm_weather'";

        $em = $this->getEntityManager();
        $query = $em->getConnection()->prepare($sql);
        $query->execute();
        $queries = $query->fetchAll();

        $queryTotalCompaigns['queryName'] = $queries[$nbr]['queryName'];
        $queryTotalCompaigns['queryText'] = $queries[$nbr]['queryText'];

        return $queryTotalCompaigns;
    }

    public function insertTheNewQueryIntoCrmQueries($queryText, $data, $groupName, $database, $user, $env)
    {

        $queryName = $data->getQueryName();
        $sql = "SELECT * FROM crm_queries WHERE queryName='" . $queryName . "';";

        $em = $this->getEntityManager();
        $query = $em->getConnection()->prepare($sql);
        $query->execute();
        $result = $query->fetchAll();

        if($result) {
            return false;
        } else {
            $enableHistory = $data->getEnableHistory();
            $description = $data->getDescription();

            if ($enableHistory == 'Yes') {
                $enableHistory = 1;
            } else {
                $enableHistory = 0;
            }

            if ($database == 'UCR') {
                $pageName = 'ucr_error_analysis';
            }else{
                $pageName = 'pick_error_analysis';
            }

            $date = new \DateTime();
            $date = $date->format('Y-m-d');

            $userId = $user->getId();

            $sql = "INSERT INTO crm_queries (queryName, queryText, groupName, pageName, enableHistory, connexion, description, dateCreate, dateModify, user_created, user_modified)
               VALUES ('$queryName', '$queryText', '$groupName', '$pageName',$enableHistory, '$env', '$description', '$date', '$date', $userId,$userId)";

            $em = $this->getEntityManager();
            $query = $em->getConnection()->prepare($sql);
            $query->execute();

            return true;
        }
    }

    public function getNewQuery($queryName){

        $sql= "SELECT id, queryName  FROM crm_queries WHERE queryName='".$queryName."';";

        $em = $this->getEntityManager();
        $query = $em->getConnection()->prepare($sql);
        $query->execute();
        $result = $query->fetchAll();

        return $result;
    }
}
