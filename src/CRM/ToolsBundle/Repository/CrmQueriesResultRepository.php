<?php

namespace CRM\ToolsBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\HttpKernel\Tests\EventListener\ValidateRequestListenerTest;

/**
 * CrmQueriesResultRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CrmQueriesResultRepository extends EntityRepository
{
    public function getDataQualityTable($groupsName, $date_array){

//        $sql= "SELECT * FROM P1RCST.ERR_BOOKING_CP  WHERE ID_CONTACT = 675039";
//        $sql= "select count(*) AS NB_Queries from P1RCST.CLI_CONTACT";

        $dataQualities= array();
        foreach ($groupsName as $group) {
            $sql = "SELECT crm_queries.id, crm_queries_result.queryName, \n";

            foreach($date_array as $key => $current_date) {
                $tmp = 1;
                $array_length = sizeof($date_array);

                if ($key == ($array_length - $tmp)) {
                    $sql .= "max(case when queryDate = '$current_date' then queryResult end) as '$current_date' \n";
                } else {
                    $sql .= "max(case when queryDate = '$current_date' then queryResult end) as '$current_date', \n";
                }
            }

            $sql = substr($sql,0,strlen($sql) - 2);
            $sql .= " \n";
            $sql .= "FROM crm_queries_result INNER JOIN crm_queries ON crm_queries_result.queryName = crm_queries.queryName 
		    WHERE crm_queries.pageName = 'error_analysis' AND crm_queries.GroupName = '".$group['groupName']."' group by queryName order by enableDisplay";
            $em = $this->getEntityManager();
            $query = $em->getConnection()->prepare($sql);
            $query->execute();
            $result = $query->fetchAll();
            $groupName= $group['groupName'];
            $dataQualities[$groupName]= $result;

        }
        return $dataQualities;
    }

    public function getOneQueryWithId($query_id, $current_date){

        if($query_id){
            $sql = "DELETE FROM crm_queries_result WHERE queryDate = '" . $current_date . "' AND query_id = '" . $query_id . "'";
//            echo $sql;die;
            $em = $this->getEntityManager();
            $query = $em->getConnection()->prepare($sql);
            $query->execute();
        }

        $sql = "SELECT * FROM crm_queries WHERE id = '" . $query_id . "'";
        $em = $this->getEntityManager();
        $query = $em->getConnection()->prepare($sql);
        $query->execute();
        $currentQuery = $query->fetchAll();

        return $currentQuery;
    }

    public function executeQueryWithId($currentQuery){

        $sql= $currentQuery[0]['queryText'];

        $em = $this->getEntityManager();
        $query = $em->getConnection()->prepare($sql);
        $query->execute();
        $result = $query->fetchAll();

        foreach($result as $row){
            foreach($row as $value){
                $countResult= $value;
            }
        }

        return $countResult;
    }

    public function insertResultQuery($currentQuery, $result, $current_date){

        $currentQuery= $currentQuery[0];
        $sql = "INSERT INTO crm_queries_result (queryName, QueryResult, queryDate, query_id) VALUES ('".$currentQuery['queryName']."', $result, '$current_date', ".$currentQuery['id'].")";
//        echo $sql;die;

        $em = $this->getEntityManager('default');
        $query = $em->getConnection()->prepare($sql);
        $query->execute();
    }
}
